// //TODO: ‚Ññ 1 ==============================================
// //–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤
// const product = {
//   price: 5000,
//   showPrice() {
//     console.log(this.price);
//   },
// };
// product.showPrice();

// //TODO: ‚Ññ 2 ==============================================
// // –Ø–∫–∏–º –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó?

// function f() {
//   console.log(this.name);
// }
// const foo = f.bind({ name: "–Ü–≤–∞–Ω" }).bind({ name: "Juan" });

// foo();

//TODO: ‚Ññ 3 ==============================================
//–í–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏, —â–æ–± –∫–æ–¥ –ø—Ä–∞—Ü—é–≤–∞–≤

// function callAction(action) {
//     action();
//     // return action;
// }

// const item = {
//   getQuatity() {
//     console.log(this.quantity);
//   },
//   quantity: 5,
// };

// callAction(item.getQuatity.bind(item));// –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
// callAction(item.getQuatity())// 2 –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç

// //TODO: ‚Ññ 4 ==============================================

// // –§—É–Ω–∫—Ü—ñ—è askPassword –ø—Ä–∏–π–º–∞—î 2 –∫–æ–ª–±–µ–∫–∞ —ñ –≤–∏–∫–ª–∏–≤–∞—î 1 —ñ–∑ –Ω–∏—Ö –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –ø–∞—Ä–æ–ª—è
// function askPassword(ok, fail) {
//   let password = prompt("Password? ü§î");
//   if (password === "admin") ok();
//   else fail();
// }
// // –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–µ–∫—Ç user –∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é name —ñ –¥–≤–æ–º–∞ –º–µ—Ç–æ–¥–∞–º–∏
// // loginOk() i loginFail()
// // —Ü—ñ –º–µ—Ç–æ–¥–∏ –≤–∏–≤–æ–¥—è—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ
// // "<name> logged in" i "<name> failed to log in" –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ
// // –∑—Ä–æ–±–∏ –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó askPassword, –ø—Ä–∏–≤`—è–∑–∞–≤—à–∏ –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ—Ç—ñ–≤ –º–µ—Ç–æ–¥–∏ –æ–±–µ–∫—Ç–∞
// const user = {
//   name: "Poly",
//   loginOk() {
//     console.log(`${this.name} logged in`);
//   },
//   loginFail() {
//     console.log(`${this.name} failed to log in`);
//   },
// };
// const logOk = user.loginOk.bind(user);
// const logFi = user.loginFail.bind(user);
// // askPassword(user.loginOk.bind(user), user.loginFail.bind(user));
// askPassword(logOk, logFi);

//TODO: ‚Ññ 5 –Ω–∞ class-–∏  =============================================
//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä User –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏
//a. userName - —ñ–º'—è, —Ä—è–¥–æ–∫
//b. age - –≤—ñ–∫, —á–∏—Å–ª–æ
//c. numbersOfPost - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
//d. –∫–ª–∞—Å –æ—á—ñ–∫—É—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏

//–î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫:
//`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ ${} ${} —Ä–æ–∫—ñ–≤ —ñ –≤ –Ω—å–æ–≥–æ ${} –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π.`

// class User {
//   constructor({ userName, age, numbersOfPost } = {}) {
//     this.userName = userName;
//     this.age = age;
//     this.numbersOfPost = numbersOfPost;
//   }

//   getInfo() {
//     return `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ ${this.userName} ${this.age} —Ä–æ–∫—ñ–≤ —ñ –≤ –Ω—å–æ–≥–æ ${this.numbersOfPost} –ø—É–±–ª—ñ–∫–∞—Ü—ñ–π.`;
//   }
// }

// const mango = new User({ age: 20, numbersOfPost: 10, userName: "mango" });
// console.log(mango.getInfo());
// console.log(typeof User);

//TODO: ‚Ññ 6 –Ω–∞ class-–∏ =============================================
//–ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Client —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç
//–∑ ‚Äã‚Äã–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login email
//–û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login #email,
//–¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä —Ç–∞ —Å–µ—Ç—Ç–µ—Ä
// get clientData() –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ—é–µ–∫—Ç –∑ –ø–µ—Ä–µ–ª—ñ—á–µ–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏
// set changeEmail(newEmail) —è–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—î –ø–æ—á—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

// class Client {
//     #login;
//     #email;
//     constructor({ login, email }) {
//         this.#login = login
//         this.#email = email
//     }
//     get clientData() {
// return {login:this.#login , email:this.#email }
//     }

//     set changeEmail(newEmail) {
//         this.#email = newEmail
//     }
// }

// const newClient = new Client({login : "sheva", email : "email"})
// console.log(newClient);


// console.log(newClient.changeEmail = "kjhhkjhk");
// console.log(newClient.clientData.email);



// TODO: ‚Ññ 7 –Ω–∞ class-–∏ =============================================
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes —è–∫–∏–π —É–ø—Ä–∞–≤–ª—è—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É
// –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
// –ù–æ—Ç–∞—Ç–∫–∞ - —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —ñ priority.
// –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω–∏–π –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priopity,
// —è–∫–∏–π –±—É–¥–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ ("high" i "low").
// –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(noteName)
// updatePriority(text, newPriority)

// class Notes {
//     static Priopity = {
//         high: "high",
//         low: "low"
// }
//     constructor() {
//         this.items = [];
//     }

//     addNote(note) {
//         return this.items.push(note);
//     }

//     removeNote(noteName) {
//         const indexEl = this.items.findIndex(item => item.text === noteName);
//         return this.items.splice(indexEl, 1);
//     }

//     updatePriority(text, newPriority) {
//         const newText = this.items.findIndex(item => item.text === text);
//         return this.items[newText].priority = newPriority;
//     }
// }

// const newNotes = new Notes()

// newNotes.addNote({text: "–∫–æ–≤–±–∞—Å–∞", priority: Notes.Priopity.high})
//  console.log(newNotes.items)



//TODO: –Ω–∞ class ======================
//  –ù–∞–ø–∏—Å–∞—Ç–∏ –∫–ª–∞—Å, —è–∫–∏–π –±—É–¥–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç–∏ –∑–æ–æ–ø–∞—Ä–∫ —Ç–≤–∞—Ä–∏–Ω.
//  –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–ª–∞—Å Animal –¥–ª—è —Ç–≤–∞—Ä–∏–Ω.
// –£ –∑–æ–æ–ø–∞—Ä–∫—É –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ —Ç–≤–∞—Ä–∏–Ω, —Ç–∞–∫—ñ —è–∫ —Å—Å–∞–≤—Ü—ñ, –ø—Ç–∞—Ö–∏, —Ä–µ–ø—Ç–∏–ª—ñ—ó —Ç–æ—â–æ.
// –ö–æ–∂–µ–Ω —Ç–∏–ø —Ç–≤–∞—Ä–∏–Ω –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Å–≤–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥,
//  –º–µ—Ç–æ–¥–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω—É —Ç–∞ –¥–ª—è –≥–æ–¥—ñ–≤–ª—ñ —Ç–≤–∞—Ä–∏–Ω.
//  –ö—Ä—ñ–º —Ç–æ–≥–æ, –∑–æ–æ–ø–∞—Ä–∫ –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–≤–∞—Ä–∏–Ω –¥–æ —Å–ø–∏—Å–∫—É —Ç–∞
// –º–µ—Ç–æ–¥ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö —Ç–≤–∞—Ä–∏–Ω —É –∑–æ–æ–ø–∞—Ä–∫—É.
