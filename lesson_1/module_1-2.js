// 1. Lysenko
//TODO: ‚Ññ 1 –Ω–∞ if...else ===============================================
// –Ø–∫—â–æ –∑–º—ñ–Ω–Ω–∞ a –¥–æ—Ä—ñ–≤–Ω—é—î 10, –≤–∏–≤–µ–¥—ñ—Ç—å '–í—ñ—Ä–Ω–æ', —ñ–Ω–∞–∫—à–µ –≤–∏–≤–µ–¥—ñ—Ç—å '–ù–µ–≤—ñ—Ä–Ω–æ'.

// const variable = 10;

// if (variable === 10) {
//     console.log('–í—ñ—Ä–Ω–æ')
// } else {
//     console.log('–ù–µ–≤—ñ—Ä–Ω–æ');
// }

// 2. Slavinska
//TODO: ‚Ññ 2 –Ω–∞ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–∫ ===============================================
// –Ø–∫—â–æ –∑–º—ñ–Ω–Ω–∞ a –¥–æ—Ä—ñ–≤–Ω—é—î 10, –≤–∏–≤–µ–¥—ñ—Ç—å '–í—ñ—Ä–Ω–æ', —ñ–Ω–∞–∫—à–µ –≤–∏–≤–µ–¥—ñ—Ç—å '–ù–µ–≤—ñ—Ä–Ω–æ'.
// const variable = 5;

// console.log(variable === 10 ? "–í—ñ—Ä–Ω–æ" : "–ù–µ–≤—ñ—Ä–Ω–æ");
// DmytroPod
//TODO: ‚Ññ 3 –Ω–∞ if...else if ===============================================
// –£ –∑–º—ñ–Ω–Ω—ñ–π min –ª–µ–∂–∏—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 0 –¥–æ 59. –í–∏–∑–Ω–∞—á—Ç–µ —É –∫–æ—Ç—Ä—É —á–≤–µ—Ä—Ç—å –≥–æ–¥–∏–Ω–∏
// –ü–æ–ø–∞–¥–∞—î —Ü–µ —á–∏—Å–ª–æ (—É –ø–µ—Ä—à—É, –¥—Ä—É–≥—É, —Ç—Ä–µ—Ç—é –∞–±–æ —á–µ—Ç–≤–µ—Ä—Ç—É).
// const min = 60;
// if (min >= 0 && min < 15) {
//   console.log("–ß–∏—Å–ª–æ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ –ø–µ—Ä—à–æ—ó —á–µ—Ç–≤–µ—Ä—Ç—ñ");
// } else if (min >= 15 && min < 30) {
//   console.log("–ß–∏—Å–ª–æ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ –¥—Ä—É–≥–æ—ó —á–µ—Ç–≤–µ—Ä—Ç—ñ");
// } else if (min >= 30 && min < 45) {
//   console.log("–ß–∏—Å–ª–æ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ —Ç—Ä–µ—Ç—å–æ—ó —á–µ—Ç–≤–µ—Ä—Ç—ñ");
// } else if (min >= 45 && min < 60) {
//   console.log("–ß–∏—Å–ª–æ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ —á–µ—Ç–≤–µ—Ä—Ç–æ—ó —á–µ—Ç–≤–µ—Ä—Ç—ñ");
// } else {
//   console.log("–Ω–µ–º–∞—î —Ç–∞–∫–æ—ó —á–µ—Ç—Ä–≤–µ—Ä—Ç—ñ");
// }

//TODO: ‚Ññ 4 –Ω–∞ switch ===========================================
// –ó–º—ñ–Ω–Ω–∞ num –º–æ–∂–µ –Ω–∞–±—É–≤–∞—Ç–∏ 4 –∑–Ω–∞—á–µ–Ω–Ω—è: 1, 2, 3 –∞–±–æ 4. –Ø–∫—â–æ –≤–æ–Ω–∞ –º–∞—î
// –∑–Ω–∞—á–µ–Ω–Ω—è '1', —Ç–æ —É –∑–º—ñ–Ω–Ω—É result –∑–∞–ø–∏—à–µ–º–æ '–∑–∏–º–∞', —è–∫—â–æ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è
// '2' - '–≤–µ—Å–Ω–∞' —ñ —Ç–∞–∫ –¥–∞–ª—ñ. –†–æ–∑–≤'—è–∂—ñ—Ç—å –∑–∞–≤–¥–∞–Ω–Ω—è —á–µ—Ä–µ–∑ switch-case.
// Elostay
// const num = 5;
// let result = "";
// switch (num) {
//   case 1:
//     result = "–∑–∏–º–∞";
//     break;
//   case 2:
//     result = "–≤–µ—Å–Ω–∞";
//     break;
//   case 3:
//     result = "–ª—ñ—Ç–æ";
//     break;
//   case 4:
//     result = "–æ—Å—ñ–Ω—å";
//     break;
//   default:
//     result = "–¢–∞–∫–æ—ó –ø–æ—Ä–∏ —Ä–æ–∫—É –Ω–µ–º–∞—î";
// }
// console.log("üíñ ~ result:", result);

// TODO: ‚Ññ 5 –Ω–∞ for =====================================================
//–ù–∞–ø–∏—à—ñ—Ç—å —Ü–∏–∫–ª, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å
// —á–∏—Å–ª–∞ –≤—ñ–¥ max –¥–æ min –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º
// –î–æ–¥–∞–π—Ç–µ —É—Å—ñ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ min –¥–æ max

// const max = 11;
// const min = 0;
// let total = 0;
// for (let i = max; i >= min ; i -= 1) {
//   if (i % 2 === 0) {
//     total += i;
//     console.log("–ø–∞—Ä–Ω—ñ", i);
//   }
// }
// console.log(total);

//TODO: ‚Ññ 6  for...of ============================================================
//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findSmallerNumber(numbers)
//—è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ –≤ –º–∞—Å–∏–≤—ñ.
//–î–æ–¥–∞–π –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤
// const numbers = [5, 35, 56, 12, 7, 80, 3];
// const numbers2 = 8;

// const findSmallerNumber = function (arr) {
//   if (!Array.isArray(arr)) {
//     return "is not array"; // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –º–∞—Å–∏–≤–Ω—ñ—Å—Ç—å;
//   }

//   let minNumber = arr[0];

//   for (const number of arr) {
//     if (minNumber > number) {
//       minNumber = number;
//     }
//   }

//   return minNumber;
// };

// console.log(findSmallerNumber(numbers));
// console.log(findSmallerNumber(numbers2));

//TODO: ‚Ññ 7 for...of =============================================================
//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é caclculateAverage()
//—è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
//–∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
//–î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ü–µ —á–∏—Å–ª–∞./*  */

// function caclculateAverage(...args) {
//   //const args = arguments; // –æ–ø–µ—Ä–∞—Ü—ñ—è –±–µ–∑ rest
//   //let totalCount = args.length;
//   let totalCount = 0;
//   let sum = 0;

//   for (const arg of args) {
//     if (typeof arg !== "number") {
//       continue;
//     }

//     sum += arg;
//     totalCount += 1;
//     //totalCount = args.length;
//   }
//   return sum / totalCount;
// }

// console.log(caclculateAverage(10, 10, 20, 200));


//TODO: ‚Ññ 8 ==============================================================
// –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ —Å—É–º—É–≤–∞—Ç–∏–º–µ —Å—É—Å—ñ–¥–Ω—ñ —á–∏—Å–ª–∞ —ñ –ø—É—à–∏—Ç–∏ –≤ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// const someArr = [22, 11, 34, 5, 12, 13, 14, 15];

// const someArray = [22, 11, 34, 5, 12, 13, 14, 15];

// function totalArray(array) {
//   const newArray = [];

//   for (let i = 0; i < array.length - 1; i += 1) {
//     newArray.push(array[i] + array[i + 1]);

//   }
//   return newArray;
// }

// console.log(totalArray(someArray));



//TODO: ‚Ññ 9 ==============================================================
//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é logItems(array), —è–∫–∞ –ø—Ä–∏–π–º–∞—î
//–º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for, —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ
//–µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ
//<–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>
//–ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.
// const musicStyles = ['–î–∂–∞–∑', '–ë–ª—é–∑', '–†–æ–∫-–Ω-—Ä–æ–ª', '–†–µ–≥–≥—ñ', '–†–µ–ø'];

// function logItems(arr) {
//     for (let i = 0; i < arr.length; i += 1) {
//         console.log(`${i + 1} - ${arr[i]}`);
//     }
// }

// logItems(musicStyles);

//TODO: ‚Ññ 10 ==============================================================
// –§—É–Ω–∫—Ü—ñ—è formatMessage(message, maxLength)
// –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ (–ø–∞—Ä–∞–º–µ—Ç—Ä message) —ñ —Ñ–æ—Ä–º–∞—Ç—É—î –π–æ–≥–æ,
// —è–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ –ø–µ—Ä–µ–≤–∏—â—É—î –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ maxLength.
// 1
// function formatMessage(message, maxLength) {
//     if (message.length > maxLength) {
//         const newArr = message.split('')
//         newArr.length = maxLength;
//         const updatedStr = newArr.join('');
//         return `'${updatedStr}...'.`;
//     } else {
//         return `'${message}'.`;
//     }
// }
// 2
// function formatMessage(message, maxLength) {
//     return message.length > maxLength ? message.slice(0, maxLength) + '...' : message;

// }
// 3
// function formatMessage(message, maxLength) {
//     if (message.length > maxLength) {
//         return message.split('').slice(0, maxLength).join('') + '...';
//     }
//     return message;
// }

// console.log(formatMessage("Curabitur ligula sapien", 16)); //–ü–æ–≤–µ—Ä—Ç–∞—î 'Curabitur ligula...'.
// console.log(formatMessage("Curabitur ligula sapien", 23)); //–ü–æ–≤–µ—Ä—Ç–∞—î 'Curabitur ligula sapien'.
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 15)); //–ü–æ–≤–µ—Ä—Ç–∞—î 'Nunc sed turpis...'.
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 41)); //–ü–æ–≤–µ—Ä—Ç–∞—î 'Nunc sed turpis a felis in nunc fringilla'.



//TODO: –¥–æ–¥–∞—Ç–∫–æ–≤–µ) ==========================
// –ù–∞–ø–∏—à—ñ—Ç—å if..else, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É switch:
// const browser = "Opera"
// switch (browser) {
//   case 'Edge':
//     alert( "You've got the Edge!" );
//     break;

//   case 'Chrome':
//   case 'Firefox':
//   case 'Safari':
//   case 'Opera':
//     alert( 'Okay we support these browsers too' );
//     break;

//   default:
//     alert( 'We hope that this page looks ok!' );
// }

// const browser = 'Opera';

// if (browser === 'Edge') {
//     alert("You've got the Edge!");
// } else if (browser === 'Chrome' || browser === 'Firefox' || browser === 'Safari' || browser === 'Opera') {
//     alert('Okay we support these browsers too');
// } else {
//     alert('We hope that this page looks ok!');
// }
